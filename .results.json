{
  "stats": {
    "suites": 8,
    "tests": 23,
    "passes": 18,
    "pending": 0,
    "failures": 5,
    "start": "2018-06-18T18:35:19.995Z",
    "end": "2018-06-18T18:35:20.490Z",
    "duration": 495
  },
  "tests": [
    {
      "title": "should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "fullTitle": "Quotes Actions addQuote(quote: {}) should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions removeQuote(quoteId: Integer) should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions upvoteQuote(quoteId: Integer) should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions downvoteQuote(quoteId: INteger) should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders without crashing",
      "fullTitle": "App Component renders without crashing",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders an h1 tag with \"Quote Maker\"",
      "fullTitle": "App Component always renders an h1 tag with \"Quote Maker\"",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a `QuoteForm` component",
      "fullTitle": "App Component always renders a `QuoteForm` component",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a `Quotes` components",
      "fullTitle": "App Component always renders a `Quotes` components",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders without crashing",
      "fullTitle": "QuoteForm Component renders without crashing",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a default state",
      "fullTitle": "QuoteForm Component has a default state",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a form tag",
      "fullTitle": "QuoteForm Component always renders a form tag",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a textarea[name=\"content\"] tag for quote content",
      "fullTitle": "QuoteForm Component always renders a textarea[name=\"content\"] tag for quote content",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a input[name=\"author\"] tag for quote author",
      "fullTitle": "QuoteForm Component always renders a input[name=\"author\"] tag for quote author",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should pass a new value to state using the handleOnChange function",
      "fullTitle": "QuoteForm Component should pass a new value to state using the handleOnChange function",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handleOnSubmit and preventDefault()",
      "fullTitle": "QuoteForm Component should handleOnSubmit and preventDefault()",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should reset state after form handleOnSubmit",
      "fullTitle": "QuoteForm Component should reset state after form handleOnSubmit",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should call addQuote prop on handleOnSubmit",
      "fullTitle": "QuoteForm Component should call addQuote prop on handleOnSubmit",
      "duration": 12,
      "currentRetry": 0,
      "err": {
        "message": "Expected this.props.addQuote to have been called: expected { Spy } to have been called",
        "showDiff": false,
        "stack": "AssertionError: Expected this.props.addQuote to have been called: expected { Spy } to have been called\n    at Context.<anonymous> (test/containers/QuotesFormContainerTest.js:104:90)"
      }
    },
    {
      "title": "should return the initial state",
      "fullTitle": "Quotes Reducer should return the initial state",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle ADD_QUOTE",
      "fullTitle": "Quotes Reducer should handle ADD_QUOTE",
      "duration": 4,
      "currentRetry": 0,
      "err": {
        "message": "expected [] to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": "[]",
        "expected": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"fdbfe82e-902f-4780-a7c1-070e44f80f37\"\n    \"votes\": 0\n  }\n]",
        "stack": "AssertionError: expected [] to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:22:17)"
      }
    },
    {
      "title": "should handle REMOVE_QUOTE",
      "fullTitle": "Quotes Reducer should handle REMOVE_QUOTE",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected [ Array(2) ] to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"0ed689e0-0828-419e-a5ad-5c17142cb95c\"\n    \"votes\": 0\n  }\n  {\n    \"author\": \"Emile Zola\"\n    \"content\": \"The artist is nothing without the gift, but the gift is nothing without work.\"\n    \"id\": \"09db177b-5a20-4d6e-82da-5f6d671b1cde\"\n    \"votes\": 0\n  }\n]",
        "expected": "[\n  {\n    \"author\": \"Emile Zola\"\n    \"content\": \"The artist is nothing without the gift, but the gift is nothing without work.\"\n    \"id\": \"09db177b-5a20-4d6e-82da-5f6d671b1cde\"\n    \"votes\": 0\n  }\n]",
        "stack": "AssertionError: expected [ Array(2) ] to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:45:17)"
      }
    },
    {
      "title": "should handle UPVOTE_QUOTE",
      "fullTitle": "Quotes Reducer should handle UPVOTE_QUOTE",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected [ Array(1) ] to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"e821c860-195f-48e0-9190-0cf03642dffa\"\n    \"votes\": 0\n  }\n]",
        "expected": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"e821c860-195f-48e0-9190-0cf03642dffa\"\n    \"votes\": 1\n  }\n]",
        "stack": "AssertionError: expected [ Array(1) ] to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:69:17)"
      }
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected [ Array(1) ] to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"65d7cb52-b7a3-4e23-bc8d-8a370035244a\"\n    \"votes\": 3\n  }\n]",
        "expected": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"65d7cb52-b7a3-4e23-bc8d-8a370035244a\"\n    \"votes\": 2\n  }\n]",
        "stack": "AssertionError: expected [ Array(1) ] to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:95:17)"
      }
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "should call addQuote prop on handleOnSubmit",
      "fullTitle": "QuoteForm Component should call addQuote prop on handleOnSubmit",
      "duration": 12,
      "currentRetry": 0,
      "err": {
        "message": "Expected this.props.addQuote to have been called: expected { Spy } to have been called",
        "showDiff": false,
        "stack": "AssertionError: Expected this.props.addQuote to have been called: expected { Spy } to have been called\n    at Context.<anonymous> (test/containers/QuotesFormContainerTest.js:104:90)"
      }
    },
    {
      "title": "should handle ADD_QUOTE",
      "fullTitle": "Quotes Reducer should handle ADD_QUOTE",
      "duration": 4,
      "currentRetry": 0,
      "err": {
        "message": "expected [] to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": "[]",
        "expected": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"fdbfe82e-902f-4780-a7c1-070e44f80f37\"\n    \"votes\": 0\n  }\n]",
        "stack": "AssertionError: expected [] to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:22:17)"
      }
    },
    {
      "title": "should handle REMOVE_QUOTE",
      "fullTitle": "Quotes Reducer should handle REMOVE_QUOTE",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected [ Array(2) ] to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"0ed689e0-0828-419e-a5ad-5c17142cb95c\"\n    \"votes\": 0\n  }\n  {\n    \"author\": \"Emile Zola\"\n    \"content\": \"The artist is nothing without the gift, but the gift is nothing without work.\"\n    \"id\": \"09db177b-5a20-4d6e-82da-5f6d671b1cde\"\n    \"votes\": 0\n  }\n]",
        "expected": "[\n  {\n    \"author\": \"Emile Zola\"\n    \"content\": \"The artist is nothing without the gift, but the gift is nothing without work.\"\n    \"id\": \"09db177b-5a20-4d6e-82da-5f6d671b1cde\"\n    \"votes\": 0\n  }\n]",
        "stack": "AssertionError: expected [ Array(2) ] to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:45:17)"
      }
    },
    {
      "title": "should handle UPVOTE_QUOTE",
      "fullTitle": "Quotes Reducer should handle UPVOTE_QUOTE",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected [ Array(1) ] to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"e821c860-195f-48e0-9190-0cf03642dffa\"\n    \"votes\": 0\n  }\n]",
        "expected": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"e821c860-195f-48e0-9190-0cf03642dffa\"\n    \"votes\": 1\n  }\n]",
        "stack": "AssertionError: expected [ Array(1) ] to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:69:17)"
      }
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected [ Array(1) ] to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"65d7cb52-b7a3-4e23-bc8d-8a370035244a\"\n    \"votes\": 3\n  }\n]",
        "expected": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"65d7cb52-b7a3-4e23-bc8d-8a370035244a\"\n    \"votes\": 2\n  }\n]",
        "stack": "AssertionError: expected [ Array(1) ] to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:95:17)"
      }
    }
  ],
  "passes": [
    {
      "title": "should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "fullTitle": "Quotes Actions addQuote(quote: {}) should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions removeQuote(quoteId: Integer) should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions upvoteQuote(quoteId: Integer) should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions downvoteQuote(quoteId: INteger) should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders without crashing",
      "fullTitle": "App Component renders without crashing",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders an h1 tag with \"Quote Maker\"",
      "fullTitle": "App Component always renders an h1 tag with \"Quote Maker\"",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a `QuoteForm` component",
      "fullTitle": "App Component always renders a `QuoteForm` component",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a `Quotes` components",
      "fullTitle": "App Component always renders a `Quotes` components",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders without crashing",
      "fullTitle": "QuoteForm Component renders without crashing",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a default state",
      "fullTitle": "QuoteForm Component has a default state",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a form tag",
      "fullTitle": "QuoteForm Component always renders a form tag",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a textarea[name=\"content\"] tag for quote content",
      "fullTitle": "QuoteForm Component always renders a textarea[name=\"content\"] tag for quote content",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a input[name=\"author\"] tag for quote author",
      "fullTitle": "QuoteForm Component always renders a input[name=\"author\"] tag for quote author",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should pass a new value to state using the handleOnChange function",
      "fullTitle": "QuoteForm Component should pass a new value to state using the handleOnChange function",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handleOnSubmit and preventDefault()",
      "fullTitle": "QuoteForm Component should handleOnSubmit and preventDefault()",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should reset state after form handleOnSubmit",
      "fullTitle": "QuoteForm Component should reset state after form handleOnSubmit",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return the initial state",
      "fullTitle": "Quotes Reducer should return the initial state",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}